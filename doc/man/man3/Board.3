.TH "Board" 3 "Mon Feb 25 2019" "4Gewinnt" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Board
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <board\&.h>\fP
.PP
Inherits \fBGLBody\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBoard\fP ()"
.br
.ti -1c
.RI "QVector3D \fBfieldToPosition\fP (QPoint field)"
.br
.ti -1c
.RI "void \fBmakeSurface\fP (QVector< \fBGLPoint\fP > *pointContainer=nullptr, QVector< \fBIndexType\fP > *indexContainer=nullptr)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "QVector3D \fBm_normal\fP"
.br
.ti -1c
.RI "QVector3D * \fBb_firstPoint\fP"
.br
.ti -1c
.RI "QVector3D * \fBb_secondPoint\fP"
.br
.ti -1c
.RI "QVector3D * \fBb_thirdPoint\fP"
.br
.ti -1c
.RI "QList< QVector3D > \fBcolumnPoints\fP"
.br
.ti -1c
.RI "float \fBdeltaX\fP"
.br
.ti -1c
.RI "float \fBdeltaY\fP"
.br
.ti -1c
.RI "float \fBdeltaZ\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A chess board with 8X8 fields in the x-z plane\&. Only the white fields are drawn, black fields are transparent\&. The raiseDisc function makes a disc 'jump' over the respective field\&. The fieldToPosition function returns the 3D-coordinates of the field in model space\&. isOnBoard returns true, when position is 'on' the board\&. 
.PP
Definition at line 15 of file board\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Board::Board ()"

.PP
Definition at line 5 of file board\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "QVector3D Board::fieldToPosition (QPoint field)"
Returns 3D position of field center\&. Field coordinates are from 0 to 7 
.PP
Definition at line 24 of file board\&.cpp\&.
.SS "void Board::makeSurface (QVector< \fBGLPoint\fP > * pointContainer = \fCnullptr\fP, QVector< \fBIndexType\fP > * indexContainer = \fCnullptr\fP)\fC [virtual]\fP"
Creates the surface\&. Should be called, when a GL engine is already running\&. To be overwritten by subclasses\&. GLESBody::createSurface should be called at the beginning of overriding functions\&. It will create the pointContainer, if none is supplied Is called automatically by draw, if required\&. MUST NOT be called without a working GL engine\&.
.PP
\fBParameters:\fP
.RS 4
\fIpointContainer\fP The container for the geometry data\&. If nullptr, a new one is created\&. 
.br
\fIindexContainer\fP The container for the index data\&. If nullptr, a new one is created\&. Created containers will be deleted by destructor\&.
.RE
.PP
Creates the surface\&. Should be called, when a GL engine is already running\&. Is called automatically by draw, if required\&. 
.PP
Reimplemented from \fBGLBody\fP\&.
.PP
Definition at line 31 of file board\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "QVector3D* Board::b_firstPoint\fC [protected]\fP"

.PP
Definition at line 32 of file board\&.h\&.
.SS "QVector3D* Board::b_secondPoint\fC [protected]\fP"

.PP
Definition at line 33 of file board\&.h\&.
.SS "QVector3D* Board::b_thirdPoint\fC [protected]\fP"

.PP
Definition at line 34 of file board\&.h\&.
.SS "QList<QVector3D> Board::columnPoints\fC [protected]\fP"

.PP
Definition at line 36 of file board\&.h\&.
.SS "float Board::deltaX\fC [protected]\fP"

.PP
Definition at line 38 of file board\&.h\&.
.SS "float Board::deltaY\fC [protected]\fP"

.PP
Definition at line 39 of file board\&.h\&.
.SS "float Board::deltaZ\fC [protected]\fP"

.PP
Definition at line 40 of file board\&.h\&.
.SS "QVector3D Board::m_normal\fC [protected]\fP"
The normal on the chessboard plane 
.PP
Definition at line 30 of file board\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for 4Gewinnt from the source code\&.
